# setup an error log to stderr
error_log /dev/stderr;

# internal settings
pid        /tmp/nginx.pid;

events {
    worker_connections  8192;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # set a resolver for docker.
    # this is the embedded docker dns server.
    resolver 127.0.0.11;

    # Disable access logging
    access_log  off;

    # set some default timeouts
    keepalive_timeout  65;

    server {
        # listen on port 80
        listen 80 default_server;
        listen [::]:80 default_server;

        # don't advertise that we're nginx
        server_tokens off;

        # Allow a specific maximum size for the request body.
        # TODO: We need to increase this for larger triplestores - maybe don't set a limit at all?
        client_max_body_size 100M;

        # set a lot of headers
        proxy_set_header Host $host;
        proxy_pass_request_headers      on;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        # Set the upstream locations as variables.
        # This forces nginx to re-resolve DNS at request time.
        # See https://archive.is/gAdBR.
        set $authproxy authproxy:8000;
        set $rdf4j rdf4j:8080; 

        # the homepage redirects to the auth proxy
        location / {
            proxy_pass http://$authproxy;
            proxy_redirect http://$authproxy/ $scheme://$host/;
        }

        # the rdf4j workbench is passed through directly to rdf4j
        location /rdf4j-workbench {
            proxy_pass http://$rdf4j/rdf4j-workbench;
            proxy_redirect http://$rdf4j/rdf4j-workbench/ $scheme://$host/;
        }

        # 
        location /rdf4j-server {
            proxy_pass http://$rdf4j/rdf4j-server;
            proxy_redirect http://$rdf4j/rdf4j-server/ $scheme://$host/;
        }
    }
}

